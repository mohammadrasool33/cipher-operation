{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muham\\\\Desktop\\\\all tasks\\\\cipher-frontend\\\\src\\\\components\\\\MonoalphabeticCipher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CipherStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonoalphabeticCipher() {\n  _s();\n  const [text, setText] = useState('');\n  const [shift, setShift] = useState(3);\n  const [result, setResult] = useState('');\n  const [attackResults, setAttackResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleEncrypt = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/monoalphabetic/encrypt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          shift\n        })\n      });\n      const data = await response.json();\n      setResult(data.result);\n      setAttackResults([]);\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('Error occurred while encrypting');\n    }\n    setLoading(false);\n  };\n  const handleDecrypt = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/monoalphabetic/decrypt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          shift\n        })\n      });\n      const data = await response.json();\n      setResult(data.result);\n      setAttackResults([]);\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('Error occurred while decrypting');\n    }\n    setLoading(false);\n  };\n  const handleAttack = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/monoalphabetic/attack', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      const data = await response.json();\n      setAttackResults(data.results);\n      setResult('');\n    } catch (error) {\n      console.error('Error:', error);\n      setAttackResults([]);\n      setResult('Error occurred during attack');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cipher-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monoalphabetic Cipher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Shift (0-25):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"25\",\n          value: shift,\n          onChange: e => setShift(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEncrypt,\n        disabled: loading,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDecrypt,\n        disabled: loading,\n        children: \"Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAttack,\n        disabled: loading,\n        children: \"Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), attackResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attack-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Attack Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: attackResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Shift \", result.shift]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score\",\n            children: [\"(Score: \", result.likelihood_score, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), \":\", result.plaintext]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(MonoalphabeticCipher, \"Mru4b7cS+fekf5pa9ZL8lBl6QSQ=\");\n_c = MonoalphabeticCipher;\nexport default MonoalphabeticCipher;\nvar _c;\n$RefreshReg$(_c, \"MonoalphabeticCipher\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MonoalphabeticCipher","_s","text","setText","shift","setShift","result","setResult","attackResults","setAttackResults","loading","setLoading","handleEncrypt","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","handleDecrypt","handleAttack","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","min","max","parseInt","onClick","disabled","length","map","index","likelihood_score","plaintext","_c","$RefreshReg$"],"sources":["C:/Users/muham/Desktop/all tasks/cipher-frontend/src/components/MonoalphabeticCipher.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CipherStyles.css';\r\n\r\nfunction MonoalphabeticCipher() {\r\n  const [text, setText] = useState('');\r\n  const [shift, setShift] = useState(3);\r\n  const [result, setResult] = useState('');\r\n  const [attackResults, setAttackResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleEncrypt = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/monoalphabetic/encrypt', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text, shift }),\r\n      });\r\n      const data = await response.json();\r\n      setResult(data.result);\r\n      setAttackResults([]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setResult('Error occurred while encrypting');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDecrypt = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/monoalphabetic/decrypt', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text, shift }),\r\n      });\r\n      const data = await response.json();\r\n      setResult(data.result);\r\n      setAttackResults([]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setResult('Error occurred while decrypting');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleAttack = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/monoalphabetic/attack', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n      const data = await response.json();\r\n      setAttackResults(data.results);\r\n      setResult('');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setAttackResults([]);\r\n      setResult('Error occurred during attack');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cipher-container\">\r\n      <h2>Monoalphabetic Cipher</h2>\r\n      \r\n      <div className=\"input-group\">\r\n        <label>\r\n          Text:\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label>\r\n          Shift (0-25):\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"25\"\r\n            value={shift}\r\n            onChange={(e) => setShift(parseInt(e.target.value))}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"button-group\">\r\n        <button onClick={handleEncrypt} disabled={loading}>\r\n          Encrypt\r\n        </button>\r\n        <button onClick={handleDecrypt} disabled={loading}>\r\n          Decrypt\r\n        </button>\r\n        <button onClick={handleAttack} disabled={loading}>\r\n          Attack\r\n        </button>\r\n      </div>\r\n\r\n      {loading && <div className=\"loading\">Processing...</div>}\r\n\r\n      {result && (\r\n        <div className=\"result\">\r\n          <h3>Result:</h3>\r\n          <p>{result}</p>\r\n        </div>\r\n      )}\r\n\r\n      {attackResults.length > 0 && (\r\n        <div className=\"attack-results\">\r\n          <h3>Attack Results:</h3>\r\n          <div className=\"results-container\">\r\n            {attackResults.map((result, index) => (\r\n              <div key={index} className=\"result-item\">\r\n                <strong>Shift {result.shift}</strong> \r\n                <span className=\"score\">(Score: {result.likelihood_score})</span>: \r\n                {result.plaintext}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonoalphabeticCipher; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,IAAI;UAAEE;QAAM,CAAC;MACtC,CAAC,CAAC;MACF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCd,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC;MACtBG,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9Bf,SAAS,CAAC,iCAAiC,CAAC;IAC9C;IACAI,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCb,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,IAAI;UAAEE;QAAM,CAAC;MACtC,CAAC,CAAC;MACF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCd,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC;MACtBG,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9Bf,SAAS,CAAC,iCAAiC,CAAC;IAC9C;IACAI,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/Bd,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB;QAAK,CAAC;MAC/B,CAAC,CAAC;MACF,MAAMkB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCZ,gBAAgB,CAACW,IAAI,CAACM,OAAO,CAAC;MAC9BnB,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9Bb,gBAAgB,CAAC,EAAE,CAAC;MACpBF,SAAS,CAAC,8BAA8B,CAAC;IAC3C;IACAI,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAK4B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B7B,OAAA;MAAA6B,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9BjC,OAAA;MAAK4B,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B7B,OAAA;QAAA6B,QAAA,GAAO,OAEL,eAAA7B,OAAA;UACEkC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhC,IAAK;UACZiC,QAAQ,EAAGC,CAAC,IAAKjC,OAAO,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACzCI,WAAW,EAAC;QAAe;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENjC,OAAA;MAAK4B,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B7B,OAAA;QAAA6B,QAAA,GAAO,eAEL,eAAA7B,OAAA;UACEkC,IAAI,EAAC,QAAQ;UACbM,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,IAAI;UACRN,KAAK,EAAE9B,KAAM;UACb+B,QAAQ,EAAGC,CAAC,IAAK/B,QAAQ,CAACoC,QAAQ,CAACL,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENjC,OAAA;MAAK4B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B7B,OAAA;QAAQ2C,OAAO,EAAE9B,aAAc;QAAC+B,QAAQ,EAAEjC,OAAQ;QAAAkB,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjC,OAAA;QAAQ2C,OAAO,EAAElB,aAAc;QAACmB,QAAQ,EAAEjC,OAAQ;QAAAkB,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjC,OAAA;QAAQ2C,OAAO,EAAEjB,YAAa;QAACkB,QAAQ,EAAEjC,OAAQ;QAAAkB,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELtB,OAAO,iBAAIX,OAAA;MAAK4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEvD1B,MAAM,iBACLP,OAAA;MAAK4B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB7B,OAAA;QAAA6B,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBjC,OAAA;QAAA6B,QAAA,EAAItB;MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN,EAEAxB,aAAa,CAACoC,MAAM,GAAG,CAAC,iBACvB7C,OAAA;MAAK4B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B7B,OAAA;QAAA6B,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBjC,OAAA;QAAK4B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BpB,aAAa,CAACqC,GAAG,CAAC,CAACvC,MAAM,EAAEwC,KAAK,kBAC/B/C,OAAA;UAAiB4B,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACtC7B,OAAA;YAAA6B,QAAA,GAAQ,QAAM,EAACtB,MAAM,CAACF,KAAK;UAAA;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACrCjC,OAAA;YAAM4B,SAAS,EAAC,OAAO;YAAAC,QAAA,GAAC,UAAQ,EAACtB,MAAM,CAACyC,gBAAgB,EAAC,GAAC;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KACjE,EAAC1B,MAAM,CAAC0C,SAAS;QAAA,GAHTF,KAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CAtIQD,oBAAoB;AAAAiD,EAAA,GAApBjD,oBAAoB;AAwI7B,eAAeA,oBAAoB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}